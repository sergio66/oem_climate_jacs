addpath /home/motteler/shome/chirp_test
addpath /home/sergio/MATLABCODE/TIME
addpath /home/sergio/MATLABCODE/PLOTTER
addpath /asl/matlib/aslutil

%{
ls -lt /asl/isilon/airs/tile_test7/2002_s008/                        | wc -l      64 subdirs
ls -lt /asl/isilon/airs/tile_test7/2002_s008/N00p00/tile_2002_s008_* | wc -l      72 files in each subdir
%}

%{
load stats_howard_16daytimesetps_2013_s237_raw_gridded.mat  %% from check_howard_16daytimesetps_2013_raw_gridded.m
savedirname.iii = thesave.iii;
savedirname.jjj = thesave.jjj;
savedirname.lat = thesave.lat_asc;
savedirname.lon = thesave.lon_asc;
savedirname.fname = thesave.fname;
for ii = 1 : 4608; fprintf(1,'%s %3i %3i %8.4f %8.4f\n',thesave.fname{ii},thesave.iii(ii),thesave.jjj(ii),thesave.lat_asc(ii),thesave.lon_asc(ii)); end
save howard_lat_lon_fname.mat savedirname
%}

disp('WARNING ..... these Lat/Lon grids are WRONGLY NUMBERED because of matlab dir() .. so need to translate using "translator_wrong2correct.m" when concating timeseries')
disp('WARNING ..... these Lat/Lon grids are WRONGLY NUMBERED because of matlab dir() .. so need to translate using "translator_wrong2correct.m" when concating timeseries')
disp('WARNING ..... these Lat/Lon grids are WRONGLY NUMBERED because of matlab dir() .. so need to translate using "translator_wrong2correct.m" when concating timeseries')

% iQAX =  0; %% quantile and extreme
% iQAX = -1; %% extreme
% iQAX = +2; %% mean
% iQAX = +1; %% quantile

set_iQAX

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

if iQAX ~= +2
  quants = [0 0.01 0.02 0.03 0.04 0.05 0.10 0.25 0.50 0.75 0.9 0.95 0.96 0.97 0.98 0.99 1.00];
  lenquants = length(quants)-1;
else
  quants = [0 1];
  lenquants = length(quants)-1;
end

%% THIS IS THE TIMESTEP, 001 - 388 = 09/2002 - 08/2019 (averaged over 16 days)
%% THIS IS THE TIMESTEP, 001 - 410 = 09/2002 - 08/2020 (averaged over 16 days)
%% THIS IS THE TIMESTEP, 001 - 434 = 09/2002 - 08/2021 (averaged over 16 days)
JOB = str2num(getenv('SLURM_ARRAY_TASK_ID'));  

%JOB = 8    %% this is 2002/12 to 2003/01 so check mm/yy boundary
%JOB = 27   %% this is Nov 2003 shutdown
%JOB = 1
%JOB = 123

%% 2013_s237 to 2013_s259
%% 2015_s283
date_stamp = ['2015_s283'];

hugedir = dir('/asl/isilon/airs/tile_test7/');  %% 417 timesteps till Nov 2020
hugedir = dir('/asl/isilon/airs/tile_test7/');  %% 433 timesteps till Nov 2021
hugedir = dir('/asl/isilon/airs/tile_test7/');  %% 457 timesteps till Nov 2020

iaFound = zeros(1,600);
for ii = 3 : length(hugedir)
  junk = hugedir(ii).name;
  junk = str2num(junk(end-2:end));
  iaFound(junk) = 1;
end
junk = find(iaFound == 1); junk = max(junk); maxN = junk; 
  fprintf(1,'max(iaFound) = %3i so should do "kleenslurm; sbatch             --array=430-%3i  sergio_matlab_jobB.sbatch 10" \n',junk,junk+2);

disp('these timesteps are not found : '); junk = find(iaFound(1:junk) == 0)
  iTimeStepNotFound = 0;
  iTimeStepNotFound = length(junk);
fprintf(1,'so should only find %3i Sergio processed files \n',maxN - iTimeStepNotFound);
disp(' ' )

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

iVers = 1;  %% use JOB together with "notdonetxt" generated by NNN<loop_make_correct_timeseriesV2.m>NNN   YYY<driver_loop_checkprogress_timeseries.m>YYY
iVers = 0;  %% use JOB together with hugedir = dir('/asl/isilon/airs/tile_test7/');

%JOB = JOB+2;  %% because first two are '.' and '..'
if iVers == 0
  JOB = JOB+2;  %% because first two are '.' and '..'
elseif iVers == 1
  disp('make sure you have run driver_loop_checkprogress_timeseries before this')
  disp('make sure you have run driver_loop_checkprogress_timeseries before this')
  disp('make sure you have run driver_loop_checkprogress_timeseries before this')
  notdone = load('notdone.txt');  %% this already has an offset of +2   .... 
  JOB = notdone(JOB);
end

date_stamp = hugedir(JOB).name;
fprintf(1,'JOB = %4i date_stamp = %s \n',JOB,date_stamp);

%%%%%%%%%%%%%%%%%%%%%%%%%
%% check to see if 64*72 files have been made for that date_stamp

numdone = zeros(72,64);
for jj = 1 : 64      %% latitude
  if mod(jj,10) == 0
    fprintf(1,'+')
  else
    fprintf(1,'.');
  end

  for ii = 1 : 72    %% longitude
    JOB = (jj-1)*72 + ii;

    %% x = translator_wrong2correct(JOB);  don't need this since we are not translating
    fdirIN  = ['../DATAObsStats_StartSept2002_v3/LatBin' num2str(jj,'%02i') '/LonBin' num2str(ii,'%02i') '/'];

    iDebug = -1;
    if iDebug > 0
      thedirjunk = dir([fdirIN '/*.mat']);
      iaFound2 = zeros(1,600);
      for ii2 = 1 : length(thedirjunk)
        junk = thedirjunk(ii2).name;
        junk = junk(1:end-4);
        junk = str2num(junk(end-2:end));
        iaFound2(junk) = 1;
      end
      junk = find(iaFound2 == 1); junk = max(junk); maxN2 = junk; 
      disp('these timesteps are not found : '); junk = find(iaFound2(1:junk) == 0)
        iTimeStepNotFound2 = 0;
        iTimeStepNotFound2 = length(junk);

      X = maxN - iTimeStepNotFound;
      Y = length(thedirjunk);
      str = ['LatBin ' num2str(jj,'%02i') ' LonBin ' num2str(ii,'%02i') ' expects ' num2str(X,'%03i') ' files and found ' num2str(Y,'%03i') ' files'];
      fprintf(1,'%s \n',str);
    end

    thedir = dir([fdirIN '/stats_data_' date_stamp '.mat']);
    if length(thedir) == 1
      if thedir.bytes > 0           
        numdone(ii,jj) = 1;    
      end
    end
  end        
end
fprintf(1,'\n');
fprintf(1,'sum(numdone(:)) = %8i ',sum(numdone(:)))

if sum(numdone(:)) == 72*64
  disp('have already made all 4608 files for this timestep');
  return
else
  disp('humph .. files not made, the show must go on!!!')
end

%%%%%%%%%%%%%%%%%%%%%%%%%

%% for each timestep, code loops over all 64x72 = 4608 tiles
tic 
thesave = struct;
thesave.iii = nan(1,4608);
thesave.jjj = nan(1,4608);

thesave.count_asc = nan(1,4608);
thesave.lat_asc = nan(1,4608);
thesave.lon_asc = nan(1,4608);
thesave.meansolzen_asc = nan(1,4608);
thesave.stdsolzen_asc  = nan(1,4608);
thesave.meansatzen_asc = nan(1,4608);
thesave.stdsatzen_asc  = nan(1,4608);
thesave.meanyear_asc = nan(1,4608);
thesave.stdyear_asc  = nan(1,4608);
thesave.meanmonth_asc = nan(1,4608);
thesave.stdmonth_asc  = nan(1,4608);
thesave.meanday_asc = nan(1,4608);
thesave.stdday_asc  = nan(1,4608);
thesave.meanhour_asc  = nan(1,4608);
thesave.stdhour_asc  = nan(1,4608);
thesave.meantai93_asc = nan(1,4608);
thesave.stdtai93_asc  = nan(1,4608);
thesave.meanrad_asc = nan(4608,2645);
thesave.stdrad_asc  = nan(4608,2645);
thesave.max1231_asc = nan(1,4608);
thesave.min1231_asc = nan(1,4608);
thesave.DCC1231_asc = nan(1,4608);
if iQAX >= 0
  thesave.hist_asc = nan(4608,161);
  thesave.quantile1231_asc = nan(4608,lenquants);
  thesave.rad_asc = nan(4608,lenquants,2645);
  thesave.count_quantile1231_asc = nan(4608,lenquants);
  thesave.satzen_quantile1231_asc = nan(4608,lenquants);
  thesave.solzen_quantile1231_asc = nan(4608,lenquants);
end
if iQAX <= 0
  thesave.rad_max_asc = nan(4608,2645,lenquants); %% for each of the 16 days
  thesave.rad_min_asc = nan(4608,2645,lenquants); %% for each of the 16 days
  thesave.rad_blockmax_asc = nan(4608,2645);
  thesave.rad_blockmin_asc = nan(4608,2645);
end

thesave.count_desc = nan(1,4608);
thesave.lat_desc = nan(1,4608);
thesave.lon_desc = nan(1,4608);
thesave.meansolzen_desc = nan(1,4608);
thesave.stdsolzen_desc  = nan(1,4608);
thesave.meansatzen_desc = nan(1,4608);
thesave.stdsatzen_desc  = nan(1,4608);
thesave.meanyear_desc = nan(1,4608);
thesave.stdyear_desc  = nan(1,4608);
thesave.meanmonth_desc = nan(1,4608);
thesave.stdmonth_desc  = nan(1,4608);
thesave.meanday_desc = nan(1,4608);
thesave.stdday_desc  = nan(1,4608);
thesave.meanhour_desc  = nan(1,4608);
thesave.stdhour_desc  = nan(1,4608);
thesave.meantai93_desc = nan(1,4608);
thesave.stdtai93_desc  = nan(1,4608);
thesave.meanrad_desc = nan(4608,2645);
thesave.stdrad_desc  = nan(4608,2645);
thesave.max1231_desc = nan(1,4608);
thesave.min1231_descc = nan(1,4608);
thesave.DCC1231_desc = nan(1,4608);
if iQAX >= 0
  thesave.hist_desc = nan(4608,161);
  thesave.quantile1231_desc = nan(4608,lenquants);
  thesave.rad_desc = nan(4608,lenquants,2645);
  thesave.count_quantile1231_desc = nan(4608,lenquants);
  thesave.satzen_quantile1231_desc = nan(4608,lenquants);
  thesave.solzen_quantile1231_desc = nan(4608,lenquants);
end
if iQAX <= 0
  thesave.rad_max_desc = nan(4608,2645,lenquants); %% for each of the 16 days
  thesave.rad_min_desc = nan(4608,2645,lenquants); %% for each of the 16 days
  thesave.rad_blockmax_desc = nan(4608,2645);
  thesave.rad_blockmin_desc = nan(4608,2645);
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

fn = ['/asl/isilon/airs/tile_test7/' date_stamp '/N00p00/tile_' date_stamp '_N00p00_E000p00.nc'];
[s, a] = read_netcdf_h5(fn);

ianpts = 1:s.total_obs;
scatter(s.lon(ianpts),s.lat(ianpts),1,s.asc_flag(ianpts)); colorbar
plot(double(s.sol_zen(ianpts)),s.asc_flag(ianpts))

[yy,mm,dd,hh] = tai2utcSergio(s.tai93(ianpts)+offset1958_to_1993);
plot(hh,double(s.sol_zen(ianpts)),'o'); xlabel('hh'); ylabel('Solzen')

pause(1)
dbt = 180 : 1 : 340;
iCnt = 0;
thedir0 = dir(['/asl/isilon/airs/tile_test7/' date_stamp '/']);
for iii = 3 : length(thedir0)
  dirdirname = ['/asl/isilon/airs/tile_test7/' date_stamp '/' thedir0(iii).name];
  dirx = dir([dirdirname '/*.nc']);
  for jjj = 1 : length(dirx)
    fname = [dirdirname '/' dirx(jjj).name];

    junkLat = iii-2;
    junkLon = jjj;
    if iQAX == 1
      foutXY = ['../DATAObsStats_StartSept2002_v3/LatBin' num2str(junkLat,'%02d') '/LonBin' num2str(junkLon,'%02d') '/stats_data_v3_quantile_' date_stamp '.mat'];
    elseif iQAX == 0
      foutXY = ['../DATAObsStats_StartSept2002_v3/LatBin' num2str(junkLat,'%02d') '/LonBin' num2str(junkLon,'%02d') '/stats_data_v3_quantile_n_extreme_' date_stamp '.mat'];
    elseif iQAX == -1
      foutXY = ['../DATAObsStats_StartSept2002_v3/LatBin' num2str(junkLat,'%02d') '/LonBin' num2str(junkLon,'%02d') '/stats_data_v3_extreme_' date_stamp '.mat'];
    elseif iQAX == +2
      foutXY = ['../DATAObsStats_StartSept2002_v3/LatBin' num2str(junkLat,'%02d') '/LonBin' num2str(junkLon,'%02d') '/stats_data_v3_mean_' date_stamp '.mat'];
    end

    iCnt = iCnt + 1;
    thesave.fname{iCnt} = fname;

    fprintf(1,'%4i %4i %4i %s \n',iii-2,jjj,iCnt,fname);

    if ~exist(foutXY)
      collect_the_64x72_stats
    else
      fprintf(1,'%% %s already exists, skipping this tile lat/lon \n',foutXY)
    end

    if mod(iCnt,72) == 0
      figure(1); scatter_coast(thesave.lon_desc,thesave.lat_desc,50,thesave.meansolzen_desc); colormap jet; title('desc solzen')
      figure(2); scatter_coast(thesave.lon_desc,thesave.lat_desc,50,thesave.meansolzen_desc); colormap jet; title('desc solzen')
      figure(3); scatter_coast(thesave.lon_desc,thesave.lat_desc,50,thesave.meanhour_desc); colormap jet; title('desc hh UTC')
      figure(4); scatter_coast(thesave.lon_desc,thesave.lat_desc,50,thesave.meanhour_desc); colormap jet; title('desc hh UTC')
%     figure(5); scatter_coast(thesave.lon,thesave.lat_asc,50,thesave.stdhour_asc); colormap jet; title('std asc hh UTC')
%     figure(6); scatter_coast(thesave.lon,thesave.lat_asc,50,thesave.stdhour_desc); colormap jet; title('std desc hh UTC')
      pause(0.1);
    end

  end    %% for jjj = loop over Lon
end      %% for iii = loop over lat

toc

wnum = s.wnum;
h2645 = load('/home/sergio/MATLABCODE/CRODGERS_FAST_CLOUD/h2645structure.mat');
wnum = h2645.h.vchan;

iSave = +1;
if iSave > 0
  %saver = ['save stats_howard_16daytimesetps_' date_stamp '_raw_gridded.mat thesave dbt quants wnum'];
  %eval(saver);

  %%% DATAObsStats_StartSept2002 is where we keep our Howard Obs stats
  %% ls DATA_StartSept2002/LatBin01 -- summary_latbin_01_lonbin_01.rtp to summary_latbin_01_lonbin_72.rtp
  
  %{
  for junkLat = 1 : 64
    mker = ['!mkdir ../DATAObsStats_StartSept2002_v3/LatBin' num2str(junkLat,'%02d') '/'];
    eval(mker);
    for junkLon = 1 : 72
      mker = ['!mkdir ../DATAObsStats_StartSept2002_v3/LatBin' num2str(junkLat,'%02d') '/LonBin' num2str(junkLon,'%02d') ];
      eval(mker)
    end
  end
  %}

  do_the_save_howard_16daytimesetps_2013_raw_griddedV3(date_stamp,thesave,dbt,quants,wnum,iQAX);
end


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

figure(1); scatter_coast(thesave.lon_asc,thesave.lat_asc,50,thesave.meansolzen_asc); colormap jet; title('asc solzen')
figure(2); scatter_coast(thesave.lon_desc,thesave.lat_desc,50,thesave.meansolzen_desc); colormap jet; title('desc solzen')
figure(3); scatter_coast(thesave.lon_asc,thesave.lat_asc,50,thesave.meanhour_asc); colormap jet; title('asc hh UTC')
figure(4); scatter_coast(thesave.lon_desc,thesave.lat_desc,50,thesave.meanhour_desc); colormap jet; title('desc hh UTC')
%figure(5); scatter_coast(thesave.lon,thesave.lat_asc,50,thesave.stdhour_asc); colormap jet; title('std asc hh UTC')
%figure(6); scatter_coast(thesave.lon,thesave.lat_desc,50,thesave.stdhour_desc); colormap jet; title('std desc hh UTC')

figure(5); scatter_coast(thesave.lon_desc,thesave.lat_desc,50,thesave.max1231_desc); colormap jet; title('max 1231')
figure(6); scatter_coast(thesave.lon_desc,thesave.lat_desc,50,rad2bt(1231,thesave.mean_rad_desc(:,1520))); colormap jet; title('mean 1231')
figure(7); scatter_coast(thesave.lon_desc,thesave.lat_desc,50,thesave.max1231_desc'-rad2bt(1231,thesave.mean_rad_desc(:,1520))); colormap jet; title('max-mean')
if iQAX >= 0 
  figure(8); scatter_coast(thesave.lon_desc,thesave.lat_desc,50,rad2bt(1231,thesave.rad_desc(:,lenquants,1520))); colormap jet; title('99-100 percetile 1231')
  figure(9); oo = find(thesave.lon_desc <= -175); plot(dbt,thesave.hist_desc(oo,:))
  figure(9); oo = find(thesave.lon_desc <= -175); [Y,I] = sort(thesave.lat_desc(oo)); pcolor(thesave.lat_desc(oo(I)),dbt,log10(thesave.hist_desc(oo(I),:)'));
  colormap jet; colorbar; shading interp

  if iQAX < 2
    figure(10); clf; pcolor(wnum,quants(2:end),rad2bt(wnum,squeeze(thesave.rad_desc(1,:,:))')'); shading flat; colorbar; xlabel('Wavnumber'); ylabel('Quantile'); colormap jet
    figure(10); clf; pcolor(wnum,1-quants(2:end),rad2bt(wnum,squeeze(thesave.rad_desc(1,:,:))')'); shading flat; colorbar; xlabel('Wavnumber'); ylabel('1-Quantile'); colormap jet; set(gca,'yscale','log')
    figure(11); clf; plot(wnum,rad2bt(wnum,squeeze(thesave.rad_desc(1,:,:))')'); shading flat; colorbar; xlabel('Wavnumber');
    figure(11); clf; plot(wnum,diff(rad2bt(wnum,squeeze(thesave.rad_desc(1,:,:))')')); shading flat; colorbar; xlabel('Wavnumber');
    figure(11); clf; plot(wnum,diff(rad2bt(wnum,squeeze(thesave.rad_desc(1,15:16,:))')')); shading flat; colorbar; xlabel('Wavnumber'); ylim([-1 +1])
  end
end

%plot(thesave.lon_desc(oo))
%pcolor(thesave.lon_desc,thesave.lat_desc,10,thesave.count_desc)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% TESTING -- this proves if we want mean spectral rates I don';t have to rerun everything, just look at mean_rad_asc or mean_rad_desc
%{
woo = load('../DATAObsStats_StartSept2002_v3/LatBin64/LonBin72/stats_data_v3_mean_2002_s003.mat');
  plot(woo.rad_quantile_asc)
  plot(woo.wnum,rad2bt(woo.wnum,woo.rad_quantile_asc))
  plot(woo.wnum,rad2bt(woo.wnum,woo.rad_quantile_asc)-rad2bt(woo.wnum,woo.mean_rad_asc))
wooE = load('../DATAObsStats_StartSept2002_v3/LatBin64/LonBin72/stats_data_v3_extreme_2002_s003.mat');
  plot(woo.wnum,rad2bt(woo.wnum,woo.rad_quantile_asc)-rad2bt(woo.wnum,wooE.mean_rad_asc))

woo = load('../DATAObsStats_StartSept2002_v3/LatBin32/LonBin36/stats_data_v3_mean_2008_s123.mat');
  plot(woo.rad_quantile_asc)
  plot(woo.wnum,rad2bt(woo.wnum,woo.rad_quantile_asc))
  plot(woo.wnum,rad2bt(woo.wnum,woo.rad_quantile_asc)-rad2bt(woo.wnum,woo.mean_rad_asc))
wooE = load('../DATAObsStats_StartSept2002_v3/LatBin32/LonBin36/stats_data_v3_extreme_2008_s123.mat');
  plot(woo.wnum,rad2bt(woo.wnum,woo.rad_quantile_asc)-rad2bt(woo.wnum,wooE.mean_rad_asc))
%}
